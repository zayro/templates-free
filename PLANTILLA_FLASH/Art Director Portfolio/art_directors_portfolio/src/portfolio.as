stop();//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// SETUP//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////import caurina.transitions.Tweener; // Thanks to Zeh Fernando and the open source community for developing Tweener: http://code.google.com/p/tweener/import flash.filters.DropShadowFilter;Stage.align = "TL";Stage.scaleMode = "noScale";//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// CONSTANTS//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////var PADDING_SIDE:Number = 36;var ROLLOVER_TIME:Number = 1.2;var BORDER_SITE:Number = 9;var PADDING_SITE:Number = 24;var PADDING_SITE_BOTTOM:Number = PADDING_BOTTOM;var NAV_SELECTED_ALPHA:Number = 15;var COLUMN2:Number = PADDING_SITE + BORDER_SITE + 227;var ROW2:Number = PADDING_SITE + BORDER_SITE + 88;var MIN_STAGE_WIDTH:Number = 807;var MIN_STAGE_HEIGHT:Number = 515;var NAV_DELAY:Number = 0.7;var NOTCH_HEIGHT:Number = 9;var NOTCH_SPACING:Number = 12;var isDetailView:Boolean = false;//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// SWF ADDRESS//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// Thanks to Asual for developing SWFAddress: http://www.asual.com/swfaddress/function replace(str, find, replace) {	return str.split(find).join(replace);}function toTitleCase(str) {	return str.substr(0,1).toUpperCase() + str.substr(1);}function formatTitle(title) {	return default_page_title + (title != '' ? ' | ' + toTitleCase(replace(title.substr(1, title.length - 2), '/', ' / ')) : '');}SWFAddress.setStrict(false);SWFAddress.onChange = function() {	var value = SWFAddress.getValue();}//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// CIRCLE PRELOADER//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////#include "circle_preloader.as"function followMouse():Void {	preloaderHolder_mc._x = _xmouse;	preloaderHolder_mc._y = _ymouse;	updateAfterEvent();}function displayPreloader():Void {	//trace("displayPreloader called");	preloaderHolder_mc._x = _xmouse;	preloaderHolder_mc._y = _ymouse;	_root.onMouseMove = followMouse;	preloaderHolder_mc._visible = true;	preloaderHolder_mc._alpha = 0;	preloaderHolder_mc.onEnterFrame = fadeCircles;	Tweener.addTween(preloaderHolder_mc, {_alpha:100, time:0.7, delay:1, transition:"linear"});}function hidePreloader():Void {	//trace("hidePreloader called");	function end():Void {		preloaderHolder_mc._visible = false;		preloaderHolder_mc.onEnterFrame = null;		delete _root.onMouseMove;	}	Tweener.addTween(preloaderHolder_mc, {_alpha:0, time:0.4, transition:"linear", onComplete:end});}//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// BROWSER RESIZING, BORDERS & BACKGROUNDS//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////Stage.addListener({onResize:resizeSite});if(DISPLAY_GRADIENT_STRIPES) {	this.attachMovie("gradient_id", "gradientTop_mc", 5557);	this.attachMovie("gradient_id", "gradientBottom_mc", 5558);}function browserTooSmall():Void {	browserTooSmall_mc._visible = true;	browserTooSmall_mc._x = (Stage.width/2) - (browserTooSmall_mc._width/2) + PADDING_SITE;	browserTooSmall_mc._y = Stage.height/2 - PADDING_SITE_BOTTOM;	nav_mc._visible = false;	email_mc._visible = false;	selectedWork_mc._visible = false;	about_mc._visible = false;	contact_mc._visible = false;	detailView_mc._visible = false;}function browserOk():Void {	browserTooSmall_mc._visible = false;	nav_mc._visible = true;	email_mc._visible = true;		// Only switch the current section back to visible	switch(currentSection) {		case 1:			selectedWork_mc._visible = true;			break;					case 2:			about_mc._visible = true;			break;					case 3:			contact_mc._visible = true;			break;				case 4:			break;				default:			trace("browserOk switch error");	}		if(isDetailView) {		detailView_mc._visible = true;		selectedWork_mc._visible = false;		email_mc._visible = false;	}}function resizeSite():Void {	drawBorder();	drawSiteBackground();		positionDropshadows();		if(DISPLAY_GRADIENT_STRIPES) {		gradientTop_mc._width = Stage.width;		gradientBottom_mc._width = Stage.width;		gradientBottom_mc._y = Stage.height-1;	}	positionCopyright();	positionEmail();	drawCenterBackground();		if(!isDetailView) {		drawGradientBackground();				if(isSelectedWorkLoaded) {			positionItems();			positionEmail();		}	}	else {		resizeDetailView();	}		if(Stage.height < MIN_STAGE_HEIGHT || Stage.width < MIN_STAGE_WIDTH ) {		browserTooSmall();	}	else {		browserOk();	}}function drawSiteBackground():Void {	var siteBackground:MovieClip = this.createEmptyMovieClip("siteBackground_mc", -200);	with(siteBackground) {		lineStyle(undefined, 0x000000, 100);		matrix = {matrixType:"box", x:0, y:0, w:15, h:500, r:90/180*Math.PI};		beginGradientFill("linear", [BACKGROUND_GRADIENT_COLOR1, BACKGROUND_GRADIENT_COLOR2], [100, 100], [0, 255], matrix, "pad", "RGB", 0);		moveTo(0, 0);		lineTo(Stage.width, 0);		lineTo(Stage.width, Stage.height);		lineTo(0, Stage.height);		endFill(0, 0);	}}function drawBorder():Void {	var border:MovieClip = this.createEmptyMovieClip("border_mc", 1);	with(border) {		lineStyle(undefined, 0xffffff, 100);		beginFill(BORDER_COLOR, 100);		moveTo(PADDING_SITE, PADDING_SITE + 1);		lineTo(Stage.width - PADDING_SITE, PADDING_SITE + 1);		lineTo(Stage.width - PADDING_SITE, Stage.height - PADDING_SITE - PADDING_SITE_BOTTOM);		lineTo(PADDING_SITE, Stage.height - PADDING_SITE - PADDING_SITE_BOTTOM);		endFill(PADDING_SITE, PADDING_SITE + 1);	}	//var dropShadow:DropShadowFilter = new DropShadowFilter(0, 45, 0x000000, 0.5, 6, 6, 1, 3);	var dropShadow:DropShadowFilter = new DropShadowFilter(0, 45, 0x000000, 0.4, 2, 2, 1, 1);	border_mc.filters = [dropShadow];}function drawCenterBackground():Void {	var centerBackground:MovieClip = this.createEmptyMovieClip("centerBackground_mc", 2);	with(centerBackground) {		lineStyle(undefined, 0x000000, 100);		beginFill(MIDDLE_COLOR, 100);		moveTo(PADDING_SITE + BORDER_SITE, PADDING_SITE + BORDER_SITE + 1);		lineTo(Stage.width - PADDING_SITE - BORDER_SITE, PADDING_SITE + BORDER_SITE + 1);		lineTo(Stage.width - PADDING_SITE - BORDER_SITE, Stage.height - PADDING_SITE_BOTTOM - PADDING_SITE - BORDER_SITE);		lineTo(PADDING_SITE + BORDER_SITE, Stage.height - PADDING_SITE_BOTTOM - PADDING_SITE - BORDER_SITE);		endFill(PADDING_SITE + BORDER_SITE, PADDING_SITE + BORDER_SITE + 1);	}}function drawGradientBackground():Void {	var gradientBackground:MovieClip = this.createEmptyMovieClip("gradientBackground_mc", 5554);	var matrix = {matrixType:"box", x:0, y:0, w:960, h:500, r:75/180*Math.PI};	with(gradientBackground) {		beginGradientFill("linear", [MIDDLE_GRADIENT_COLOR1, MIDDLE_GRADIENT_COLOR2], [100, 100], [0, 255], matrix, "pad", "RGB", 0);		moveTo(PADDING_SITE + BORDER_SITE, PADDING_SITE + BORDER_SITE + 1);		lineTo(Stage.width - PADDING_SITE - BORDER_SITE, PADDING_SITE + BORDER_SITE + 1);		lineTo(Stage.width - PADDING_SITE - BORDER_SITE, Stage.height - PADDING_SITE_BOTTOM - PADDING_SITE - BORDER_SITE);		lineTo(PADDING_SITE + BORDER_SITE, Stage.height - PADDING_SITE_BOTTOM - PADDING_SITE - BORDER_SITE);		endFill(PADDING_SITE + BORDER_SITE, PADDING_SITE + BORDER_SITE + 1);	}}this.attachMovie("browserTooSmall_id", "browserTooSmall_mc", 15574);Tweener.addTween(browserTooSmall_mc.bg_mc, {_color:BUTTON_COLOR, time:0});browserTooSmall_mc.bg_mc._alpha = 80;//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// NAVIGATION//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////this.attachMovie("nav_id", "nav_mc", 5574);nav_mc._x = COLUMN2 + 1;nav_mc._y = PADDING_SITE + BORDER_SITE + PADDING_SIDE + NOTCH_HEIGHT - 1;Tweener.addTween(nav_mc.nav1_mc, {_color:NAV_COLOR, time:0});Tweener.addTween(nav_mc.nav2_mc, {_color:NAV_COLOR, time:0});Tweener.addTween(nav_mc.nav3_mc, {_color:NAV_COLOR, time:0});var NAV1_SELECTED_X:Number = -1;var NAV2_SELECTED_X:Number = 120;var NAV3_SELECTED_X:Number = 192;var NAV1_SELECTED_WIDTH:Number = 92;var NAV2_SELECTED_WIDTH:Number = 43;var NAV3_SELECTED_WIDTH:Number = 53;var navSelected:MovieClip = nav_mc.createEmptyMovieClip("navSelected_mc", 1553);navSelected.lineStyle(undefined, 0xffffff, 0);navSelected.beginFill(NAV_SELECTED_COLOR, NAV_SELECTED_ALPHA);navSelected.moveTo(0, 0);navSelected.lineTo(100, 0);navSelected.lineTo(100, 3);navSelected.lineTo(0, 3);navSelected.endFill(0, 0);navSelected._x = -1;navSelected._y = 16;nav_mc.navSelected_mc.swapDepths(nav_mc.nav1_mc);navSelected_mc._alpha = 0;function navRollOver(which:String) {	var newX:MovieClip = eval("NAV" + which + "_SELECTED_X");	var newWidth:MovieClip = eval("NAV" + which + "_SELECTED_WIDTH");	Tweener.addTween(nav_mc.navSelected_mc, {_x:newX, time:0});	Tweener.addTween(nav_mc.navSelected_mc, {_width:newWidth, time:0});	if(which == "0") {		Tweener.addTween(nav_mc.navSelected_mc, {_alpha:0, time:0.5});	}	else {		Tweener.addTween(nav_mc.navSelected_mc, {_alpha:100, time:0.5});	}}function select(which:String):Void {	var newX:MovieClip = eval("NAV" + which + "_SELECTED_X");	var newWidth:MovieClip = eval("NAV" + which + "_SELECTED_WIDTH");	Tweener.addTween(nav_mc.navSelected_mc, {_x:newX, time:0.9, transition:"easeinback"});	Tweener.addTween(nav_mc.navSelected_mc, {_width:4, time:0.9, transition:"easeoutquint", delay:0});	Tweener.addTween(nav_mc.navSelected_mc, {_xscale:110, time:0.9, transition:"easeinquint"});	Tweener.addTween(nav_mc.navSelected_mc, {_xscale:100, time:0.9, delay:0.9, transition:"easeinquint"});	Tweener.addTween(nav_mc.navSelected_mc, {_width:newWidth, time:0.9, transition:"easeoutback", delay:0.9});		Tweener.addTween(nav_mc.nav1_mc, {_color:NAV_COLOR, time:0.5});	Tweener.addTween(nav_mc.nav2_mc, {_color:NAV_COLOR, time:0.5});	Tweener.addTween(nav_mc.nav3_mc, {_color:NAV_COLOR, time:0.5});		var m:MovieClip = eval("nav_mc.nav" + which + "_mc");	Tweener.addTween(m, {_color:NAV_SELECTED_COLOR, time:0.5});		switch(which) {		case "1":			SWFAddress.setTitle(DEFAULT_PAGE_TITLE);			SWFAddress.setValue('/');			break;				case "2":			SWFAddress.setTitle(ABOUT_PAGE_TITLE);			SWFAddress.setValue('/about/');			break;					case "3":			SWFAddress.setTitle(CONTACT_PAGE_TITLE);			SWFAddress.setValue('/contact/');			break;					default:			trace("error: switch statement default");	}}for(var i:Number = 1; i < 4; i++) {	var b:MovieClip = eval("nav_mc.btn" + i);	var n:MovieClip = eval("nav_mc.nav" + i + "_mc");	b.onRollOver = function() {		Tweener.addTween(eval("nav_mc.nav" + this._name.charAt(3) + "_mc"), {_blur_blurX:5, _blur_blurY:5, transition:"easeoutquint", time:0.1});		Tweener.addTween(eval("nav_mc.nav" + this._name.charAt(3) + "_mc"), {_blur_blurX:0, _blur_blurY:0, transition:"easeoutquint", time:0.8, delay:0.1});		Tweener.addTween(eval("nav_mc.nav" + this._name.charAt(3) + "_mc"), {_color:NAV_ROLLOVER_COLOR, time:0.2});	}	b.onRelease = function() {		select(this._name.charAt(3));		eval("nav" + this._name.charAt(3))();	}	b.onRollOut = b.onReleaseOutside = function() {		Tweener.addTween(eval("nav_mc.nav" + this._name.charAt(3) + "_mc"), {_color:NAV_COLOR, time:ROLLOVER_TIME});				switch(currentSection) {			case 1:				Tweener.addTween(eval("nav_mc.nav" + "1" + "_mc"), {_color:NAV_SELECTED_COLOR, time:ROLLOVER_TIME});				break;							case 2:				Tweener.addTween(eval("nav_mc.nav" + "2" + "_mc"), {_color:NAV_SELECTED_COLOR, time:ROLLOVER_TIME});				break;							case 3:				Tweener.addTween(eval("nav_mc.nav" + "3" + "_mc"), {_color:NAV_SELECTED_COLOR, time:ROLLOVER_TIME});				break;							default:				trace("error: switch nav rollover");		}	}}var currentSection:Number = 1;// Selected Workfunction nav1():Void {	currentSection = 1;		if(isSelectedWorkLoaded == false) {		displayPreloader();		items_xml.load("selected_work.xml");	}	else {		hidePreloader();		displaySelectedWork();	}		resizeSite();	hideAbout();	hideContact();}// Aboutfunction nav2():Void {	currentSection = 2;	hidePreloader();	hideSelectedWork();	displayAbout();	hideContact();	if(isAboutPhotoLoaded == false) {		loadAboutPhoto();	}}// Contactfunction nav3():Void {	currentSection = 3;	hideSelectedWork();	hideAbout();	if(isContactLoaded == false) {		initContact();	}	else {		displayContact();	}}//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// SELECTED WORK//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////#include "selected_work.as"//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// ABOUT//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////this.createEmptyMovieClip("about_mc", 5600);about_mc.createTextField("about_txt", 5601, 0, 0, 400, 360);about_mc.about_txt.multiline = true;about_mc.about_txt.wordWrap = true;about_mc.about_txt._x = COLUMN2 - 3;about_mc.about_txt._y = ROW2;about_mc.about_txt.embedFonts = true;about_mc.about_txt.selectable = false;about_mc.about_txt.html = true;about_mc.about_txt.antiAliasType = "advanced";var aboutData:LoadVars = new LoadVars();aboutData.onLoad = function(success:Boolean) {	if(success) {		var about_fmt:TextFormat = new TextFormat();		about_fmt.color = BASIC_TEXT_COLOR;		about_fmt.font = "L VAG Rounded Light";		about_fmt.size = 11;		about_fmt.letterSpacing = 0.5;		about_fmt.leading = 4;		about_mc.about_txt.htmlText = this.aboutText;		about_mc.about_txt.setTextFormat(about_fmt);	}	else {		var about_fmt:TextFormat = new TextFormat();		about_fmt.color = BASIC_TEXT_COLOR;		about_fmt.font = "L VAG Rounded Light";		about_fmt.size = 11;		about_fmt.letterSpacing = 0.5;		about_fmt.leading = 4;		about_mc.about_txt.text = "Error loading file";		about_mc.about_txt.setTextFormat(about_fmt);	}};aboutData.load("about.txt");var isAboutPhotoLoaded:Boolean = false;function loadAboutPhoto():Void {	displayPreloader();	about_mc.createEmptyMovieClip("aboutPhoto_mc", 5602);	about_mc.aboutPhoto_mc._x = PADDING_SITE + BORDER_SITE + PADDING_SIDE;	about_mc.aboutPhoto_mc._y = ROW2 + 18;	about_mc.aboutPhoto_mc._alpha = 0;	var aboutPhoto_mcl:MovieClipLoader = new MovieClipLoader();	var aboutPhotoListener:Object = new Object();	aboutPhoto_mcl.addListener(aboutPhotoListener);	aboutPhoto_mcl.loadClip("about_photo.jpg", about_mc.aboutPhoto_mc);	aboutPhotoListener.onLoadInit = function() {		isAboutPhotoLoaded = true;		Tweener.addTween(about_mc.aboutPhoto_mc, {_alpha:100, time:0.5, transition:"linear"});	}}function displayAbout():Void {	about_mc._visible = true;	Tweener.addTween(about_mc, {_alpha:100, time:0.5, transition:"linear", delay:NAV_DELAY});	Tweener.addTween(about_mc, {_blur_blurX:0, time:0.5, transition:"easeoutquad", delay:NAV_DELAY});}function hideAbout():Void {	Tweener.addTween(about_mc, {_alpha:0, time:0.5, transition:"linear", delay:0, onComplete:function() { this._visible = false; }});	Tweener.addTween(about_mc, {_blur_blurX:10, time:0.5, transition:"easeoutquad"});}Tweener.addTween(about_mc, {_alpha:0, time:0});Tweener.addTween(about_mc, {_blur_blurX:10, time:0});about_mc._visible = false;//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// CONTACT//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////var isContactLoaded:Boolean = false;function displayContact():Void {	contact_mc._visible = true;	Tweener.addTween(contact_mc, {_alpha:100, time:0.5, transition:"linear", delay:NAV_DELAY});	Tweener.addTween(contact_mc, {_blur_blurX:0, time:0.5, transition:"easeoutquad", delay:NAV_DELAY, onComplete:function() {  }});		var DELAY:Number = 1.2;	var TRAN:String = "easeoutback";	var TIME:Number = 0.4;	var TT:Number = 1.2; // total time for border animations		// Init	Tweener.addTween(contact_mc.form_mc.field1Border_mc, {_width:0, _height:0, time:0});	Tweener.addTween(contact_mc.form_mc.field1Bg_mc, {_alpha:0, time:0});	Tweener.addTween(contact_mc.form_mc.field1_txt, {_alpha:0, _blur_blurX:15, time:0});		Tweener.addTween(contact_mc.form_mc.field2Border_mc, {_width:0, _height:0, time:0});	Tweener.addTween(contact_mc.form_mc.field2Bg_mc, {_alpha:0, time:0});	Tweener.addTween(contact_mc.form_mc.field2_txt, {_alpha:0, time:0});	Tweener.addTween(contact_mc.form_mc.field2_txt, {_alpha:0, _blur_blurX:15, time:0});		Tweener.addTween(contact_mc.form_mc.field3Border_mc, {_width:0, _height:0, time:0});	Tweener.addTween(contact_mc.form_mc.field3Bg_mc, {_alpha:0, time:0});	Tweener.addTween(contact_mc.form_mc.field3_txt, {_alpha:0, time:0});	Tweener.addTween(contact_mc.form_mc.field3_txt, {_alpha:0, _blur_blurX:15, time:0});		Tweener.addTween(contact_mc.send_btn, {_alpha:0, time:0});		// Animate	Tweener.addTween(contact_mc.form_mc.field1Border_mc, {_width:181, _height:20, time:TIME, transition:TRAN, delay:DELAY});	Tweener.addTween(contact_mc.form_mc.field2Border_mc, {_width:181, _height:20, time:TIME, transition:TRAN, delay:DELAY + 0.4});	Tweener.addTween(contact_mc.form_mc.field3Border_mc, {_width:385, _height:150, time:TIME, transition:TRAN, delay:DELAY + 0.8});		Tweener.addTween(contact_mc.form_mc.field1Bg_mc, {_alpha:contact_mc.BG_ALPHA, time:TIME, delay:DELAY + TT});	Tweener.addTween(contact_mc.form_mc.field2Bg_mc, {_alpha:contact_mc.BG_ALPHA, time:TIME, delay:DELAY + 0.2 + TT});	Tweener.addTween(contact_mc.form_mc.field3Bg_mc, {_alpha:contact_mc.BG_ALPHA, time:TIME, delay:DELAY + 0.4 + TT});		Tweener.addTween(contact_mc.form_mc.field1_txt, {_alpha:100, _blur_blurX:0, time:TIME, delay:DELAY + TT});	Tweener.addTween(contact_mc.form_mc.field2_txt, {_alpha:100, _blur_blurX:0, time:TIME, delay:DELAY + 0.2 + TT});	Tweener.addTween(contact_mc.form_mc.field3_txt, {_alpha:100, _blur_blurX:0, time:TIME, delay:DELAY + 0.4 + TT});		Tweener.addTween(contact_mc.send_btn, {_alpha:100, time:TIME, delay:DELAY + 0.6 + TT});		contact_mc.initContact();}function hideContact():Void {	Tweener.addTween(contact_mc, {_alpha:0, time:0.5, transition:"linear", delay:0, onComplete:function() { this._visible = false; }});	Tweener.addTween(contact_mc, {_blur_blurX:10, time:0.5, transition:"easeoutquad"});}function initContact():Void {	displayPreloader();	this.createEmptyMovieClip("contact_mc", 12000);	contact_mc._visible = false;	contact_mc._x = COLUMN2;	contact_mc._y = ROW2;	var contact_mcl:MovieClipLoader =  new MovieClipLoader();	var contactLoaderListener:Object = new Object();	contact_mcl.addListener(contactLoaderListener);	contact_mcl.loadClip("contact.swf", contact_mc);	contact_mc._visible = false;		contactLoaderListener.onLoadInit = function(loadTarget) {		loadTarget._visible = false;		loadTarget.createTextField("contact_txt", 12010, 0, 0, 500, 360);		loadTarget.contact_txt.multiline = true;		loadTarget.contact_txt.wordWrap = true;		loadTarget.contact_txt._x = -3;		loadTarget.contact_txt._y = 0;		loadTarget.contact_txt.embedFonts = true;		loadTarget.contact_txt.selectable = false;		loadTarget.contact_txt.html = true;		loadTarget.contact_txt.antiAliasType = "advanced";		var contactData:LoadVars = new LoadVars();		contactData.onLoad = function(success:Boolean) {			if(success) {				var contact_fmt:TextFormat = new TextFormat();				contact_fmt.color = BASIC_TEXT_COLOR;				contact_fmt.font = "L VAG Rounded Light";				contact_fmt.size = 11;				contact_fmt.letterSpacing = 0.5;				contact_fmt.leading = 4;				loadTarget.contact_txt.htmlText = this.contactText;				loadTarget.contact_txt.setTextFormat(contact_fmt);				isContactLoaded = true;			}			else {				var contact_fmt:TextFormat = new TextFormat();				contact_fmt.color = BASIC_TEXT_COLOR;				contact_fmt.font = "L VAG Rounded Light";				contact_fmt.size = 11;				contact_fmt.letterSpacing = 0.5;				contact_fmt.leading = 4;				loadTarget.contact_txt.text = "Error loading file";				loadTarget.contact_txt.setTextFormat(contact_fmt);			}		};			contactData.load("contact.txt");				// Initialize form, set color of send button and add event handlers		Tweener.addTween(loadTarget, {_alpha:0, time:0});		Tweener.addTween(loadTarget, {_blur_blurX:10, time:0});		Tweener.addTween(loadTarget.send_btn.bg_mc, {_color:BUTTON_COLOR, time:0});		Tweener.addTween(loadTarget.send_btn.bg_mc, {_alpha:80, time:0});				loadTarget.send_btn.onRollOver = function() {			Tweener.addTween(loadTarget.send_btn.bg_mc, {_color:BUTTON_ROLLOVER_COLOR, time:ROLLOVER_TIME});		};				loadTarget.send_btn.onReleaseOutside = loadTarget.send_btn.onRollOut = function() {			Tweener.addTween(loadTarget.send_btn.bg_mc, {_color:BUTTON_COLOR, time:ROLLOVER_TIME});		};				// Make sure user hasn't navigated away		if(currentSection == 3) {			displayContact();		}		else {			hidePreloader();			break;		}				hidePreloader();	}}//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// INITIALIZE//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////if(USE_OWN_LOGO) {	var m:MovieClip = this.createEmptyMovieClip("logo_mc2", 5559);	m._alpha = 0;	//Tweener.addTween(logo2_mc, {_alpha:0, time:0});		var logo_mcl:MovieClipLoader = new MovieClipLoader();	var logoListener:Object = new Object();	logo_mcl.addListener(logoListener);		logoListener.onLoadComplete = function() {		Tweener.addTween(m, {_alpha:100, time:0.5, transition:"linear", delay:4});		m.onRelease = function() {			nav1();			select("1");		}	}		logo_mcl.loadClip(YOUR_LOGO_FILE, m);		m._x = PADDING_SITE + BORDER_SITE + PADDING_SIDE - 2;	m._y = PADDING_SITE + BORDER_SITE + PADDING_SIDE + NOTCH_HEIGHT - 2;}else {	this.attachMovie("logo_id", "logo_mc", 5559);	logo_mc.name_mc.textBox.text = LOGO_NAME;	var name_mc_fmt:TextFormat = new TextFormat();	name_mc_fmt.color = LOGO_NAME_COLOR;	logo_mc.name_mc.textBox.setTextFormat(name_mc_fmt);	logo_mc.tagline_mc.textBox.text = LOGO_TAGLINE;	var tagline_mc_fmt:TextFormat = new TextFormat();	tagline_mc_fmt.letterSpacing = 0.2;	tagline_mc_fmt.color = LOGO_TAGLINE_COLOR;	logo_mc.tagline_mc.textBox.setTextFormat(tagline_mc_fmt);}logo_mc._x = PADDING_SITE + BORDER_SITE + PADDING_SIDE - 2;logo_mc._y = PADDING_SITE + BORDER_SITE + PADDING_SIDE + NOTCH_HEIGHT - 2;logo_mc.btn.onRelease = function() {	nav1();	select("1");}this.attachMovie("dropshadowLeft_id", "dropshadowLeft_mc", -22);this.attachMovie("dropshadowRight_id", "dropshadowRight_mc", -23);dropshadowLeft_mc._x = 20;function positionDropshadows():Void {	dropshadowLeft_mc._y = Stage.height - PADDING_SITE_BOTTOM - 47;	dropshadowRight_mc._x = Stage.width - PADDING_SITE - dropshadowRight_mc._width + 2;	dropshadowRight_mc._y = Stage.height - PADDING_SITE_BOTTOM - 47;;}this.attachMovie("copyright_id", "copyright_mc", 5572);copyright_mc.copyright_txt.textBox.text = FOOTER_TEXT;Tweener.addTween(copyright_mc.copyright_txt, {_color:FOOTER_TEXT_COLOR, time:0});function positionCopyright():Void {	copyright_mc._x = (Stage.width/2) - (copyright_mc._width/2);	copyright_mc._y = Stage.height - PADDING_SITE_BOTTOM - copyright_mc._height + 7;}this.attachMovie("email_id", "email_mc", 5560);email_mc.emailText_mc.textBox.text = EMAIL_TEXT;var emailText_fmt:TextFormat = new TextFormat();emailText_fmt.letterSpacing = 0.5;emailText_fmt.color = BASIC_TEXT_COLOR;email_mc.emailText_mc.textBox.setTextFormat(emailText_fmt);email_mc.email_mc.textBox.text = EMAIL_ADDRESS;var email_fmt:TextFormat = new TextFormat();email_fmt.letterSpacing = 0.2;email_mc.email_mc.textBox.setTextFormat(email_fmt);Tweener.addTween(email_mc.email_mc, {_color:EMAIL_COLOR, time:0});function positionEmail():Void {	if(isSelectedWorkLoaded) {		email_mc._x = itemsWidth + COLUMN2 - email_mc._width - BORDER_SITE;	}	else {		email_mc._x = Stage.width - (email_mc._width + PADDING_SITE + BORDER_SITE + PADDING_SIDE - 3);	}		email_mc._y = PADDING_SITE + BORDER_SITE + PADDING_SIDE + NOTCH_HEIGHT - 3;}email_mc.btn.onRollOver = function() {	Tweener.addTween(email_mc.email_mc, {_blur_blurX:5, _blur_blurY:5, transition:"easeoutquint", time:0.1});	Tweener.addTween(email_mc.email_mc, {_blur_blurX:0, _blur_blurY:0, transition:"easeoutquint", time:0.8, delay:0.1});	Tweener.addTween(email_mc.email_mc, {_color:EMAIL_ROLLOVER_COLOR, time:0.5});};email_mc.btn.onRollOut = email_mc.btn.onReleaseOutside = function() {	Tweener.addTween(email_mc.email_mc, {_color:EMAIL_COLOR, time:0.5});};email_mc.btn.onRelease = function() {	getURL("mailto:" + EMAIL_ADDRESS);};var addressState = SWFAddress.getValue();function initSection() {	switch(addressState) {		case "/about/":			select("2");			nav2();			break;					case "/contact/":			select("3");			nav3();			break;					default:			nav1();			select("1");	}}resizeSite();if(DISPLAY_GRADIENT_STRIPES) {	var baseClips:Array = new Array(	gradientTop_mc,	gradientBottom_mc,	border_mc,	centerBackground_mc,	gradientBackground_mc,	dropshadowLeft_mc,	dropshadowRight_mc,	siteBackground_mc	);}else {	var baseClips:Array = new Array(	border_mc,	centerBackground_mc,	gradientBackground_mc,	dropshadowLeft_mc,	dropshadowRight_mc,	siteBackground_mc	);}for(var i:Number = 0; i < baseClips.length; i++) {	baseClips[i]._visible = false;	baseClips[i]._alpha = 0;}var contentClips:Array = new Array(logo_mc,nav_mc,email_mc,copyright_mc);for(var i:Number = 0; i < contentClips.length; i++) {	Tweener.addTween(contentClips[i], {_blur_blurX:70, time:0});	contentClips[i]._visible = false;	contentClips[i]._alpha = 0;}function animateInContentClips():Void {	for(var i:Number = 0; i < contentClips.length; i++) {		var t:MovieClip = eval(contentClips[i]);		t._visible = true;		Tweener.addTween(t, {_alpha:100, time:0.5, transition:"easeoutquad", delay:i/2});		Tweener.addTween(t, {_blur_blurX:0, time:0.5, transition:"easeoutquad", delay:i/2});	}	initSection();}if(DISPLAY_GRADIENT_STRIPES) {	gradientTop_mc._visible = true;	gradientBottom_mc._visible = true;}border_mc._visible = true;siteBackground_mc._visible = true;dropshadowLeft_mc._visible = true;dropshadowRight_mc._visible = true;function setBgWidth():Void {	Tweener.addTween(centerBackground_mc, {_x:27, _width:0, _alpha:100, time:0});}Tweener.addTween(siteBackground_mc, {_alpha:100, time:0.5, transition:"linear", delay:0.5});Tweener.addTween(gradientTop_mc, {_alpha:100, time:0.5, transition:"linear", delay:0.5});Tweener.addTween(gradientBottom_mc, {_alpha:100, time:0.5, transition:"linear", delay:0.5});Tweener.addTween(border_mc, {_alpha:100, time:0.7, transition:"linear", delay:1.4, onComplete:function() { centerBackground_mc._visible = true; setBgWidth(); }});Tweener.addTween(dropshadowLeft_mc, {_alpha:40, time:1, transition:"easeoutquint", delay:2.1});Tweener.addTween(dropshadowRight_mc, {_alpha:40, time:1, transition:"easeoutquint", delay:2.1});Tweener.addTween(centerBackground_mc, {_x:0, _xscale:100, time:1, transition:"easeoutquint", delay:2.3, onComplete:function() { gradientBackground_mc._visible = true; }});Tweener.addTween(gradientBackground_mc, {_alpha:100, time:0.5, transition:"linear", delay:3.5, onComplete:animateInContentClips});var allClips:Array = new Array();allClips.push(logo_mc);allClips.push(logo_mc2);allClips.push(email_mc);allClips.push(nav_mc);allClips.push(gradientBackground_mc);allClips.push(selectedWork_mc);function displayDetailView():Void {	isDetailView = true;	for(var i:Number = 0; i < allClips.length; i++) {		Tweener.addTween(allClips[i], {_alpha:0, time:0.7, transition:"easeoutquint", onComplete:function() {this._visible = false;}});	}		for(var i:Number = 0; i < detailViewClips.length; i++) {		Tweener.addTween(eval(detailViewClips[i]), {_alpha:0, time:0});	}		for(var i:Number = 0; i < detailViewClips.length; i++) {		Tweener.addTween(eval(detailViewClips[i]), {_alpha:100, time:0.5, transition:"linear", delay:0.5 + (i/10)});	}		detailView_mc._visible = true;	initDetailView();}function hideDetailView():Void {	isDetailView = false;	for(var i:Number = 0; i < allClips.length; i++) {		allClips[i]._visible = true;		Tweener.addTween(allClips[i], {_alpha:100, time:0.7, transition:"easeoutquint", delay:i/10});	}	resizeSite();		detailView_mc._visible = false;		SWFAddress.setTitle(DEFAULT_PAGE_TITLE);	SWFAddress.setValue('/');}//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// RIGHT-CLICK CONTEXT MENU//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////#include "right_click.as"